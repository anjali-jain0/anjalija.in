{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Anjali\\\\website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Anjali\\\\website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\Anjali\\\\website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Anjali\\\\website\\\\src\\\\c.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  &.test {\\n    background-color: blue !important;\\n  }\\n\\n  &.test1 {\\n    background-color: red !important;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: transparent;\\n  border: none;\\n  outline: none;\\n\\n  > input {\\n    width: 0;\\n    height: 0;\\n\\n    &:checked {\\n      & + label {\\n        color: blue;\\n        border-color: blue;\\n      }\\n    }\\n  }\\n\\n  > label {\\n    padding: 5px;\\n    border-bottom: 2px solid transparent;\\n\\n    &:hover {\\n      color: blue;\\n      cursor: pointer;\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  width: 100px;\\n  height: 100px;\\n  margin-top: 20px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport \"./cstyles.css\";\nimport styled from \"styled-components\";\nimport IsoTopeGrid from \"react-isotope\";\nvar Container = styled.div(_templateObject());\nvar Filter = styled(\"button\")(_templateObject2());\nvar Card = styled(\"div\")(_templateObject3());\nvar cardsDefault = [{\n  id: \"a\",\n  filter: [\"test\", \"chart\"]\n}, {\n  id: \"b\",\n  filter: [\"test1\", \"tile\"]\n}, {\n  id: \"c\",\n  filter: [\"test\", \"chart\"]\n}, {\n  id: \"d\",\n  filter: [\"test1\", \"tile\"]\n}, {\n  id: \"e\",\n  filter: [\"test\", \"tile\"]\n}, {\n  id: \"f\",\n  filter: [\"test1\", \"chart\"]\n}, {\n  id: \"h\",\n  filter: [\"test1\", \"chart\"]\n}];\nvar filtersDefault = [{\n  label: \"all\",\n  isChecked: true\n}, {\n  label: \"test\",\n  isChecked: false\n}, {\n  label: \"test1\",\n  isChecked: false\n}, {\n  label: \"chart\",\n  isChecked: false\n}, {\n  label: \"tile\",\n  isChecked: false\n}];\nexport default cont = function cont() {\n  var _useState = useState(filtersDefault),\n      _useState2 = _slicedToArray(_useState, 2),\n      filters = _useState2[0],\n      updateFilters = _useState2[1];\n\n  var onFilter = function onFilter(event) {\n    var _event$target = event.target,\n        value = _event$target.value,\n        checked = _event$target.checked;\n    updateFilters(function (state) {\n      return state.map(function (f) {\n        if (f.label === value) {\n          return _objectSpread(_objectSpread({}, f), {}, {\n            isChecked: checked\n          });\n        }\n\n        return f;\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, filters.map(function (f) {\n    return /*#__PURE__*/React.createElement(Filter, {\n      key: \"\".concat(f.label, \"_key\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: f.label,\n      type: \"checkbox\",\n      value: f.label,\n      onChange: onFilter,\n      checked: f.isChecked,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: f.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, f.label));\n  })), /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IsoTopeGrid, {\n    gridLayout: cardsDefault,\n    noOfCols: 3,\n    unitWidth: 200,\n    unitHeight: 100,\n    filters: filters,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, cardsDefault.map(function (card) {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: card.id,\n      className: \"card \".concat(card.filter[0]),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tags\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, card.filter.map(function (c) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 19\n        }\n      }, c);\n    })), card.id);\n  }))));\n};","map":{"version":3,"sources":["C:/Users/Anjali/website/src/c.js"],"names":["React","useState","styled","IsoTopeGrid","Container","div","Filter","Card","cardsDefault","id","filter","filtersDefault","label","isChecked","cont","filters","updateFilters","onFilter","event","target","value","checked","state","map","f","card","c"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,IAAMC,SAAS,GAAGF,MAAM,CAACG,GAAV,mBAAf;AAOA,IAAMC,MAAM,GAAGJ,MAAM,CAAC,QAAD,CAAT,oBAAZ;AA4BA,IAAMK,IAAI,GAAGL,MAAM,CAAC,KAAD,CAAT,oBAAV;AAUA,IAAMM,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,OAAT;AAFV,CADmB,EAKnB;AACED,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,MAAV;AAFV,CALmB,EASnB;AACED,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,OAAT;AAFV,CATmB,EAanB;AACED,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,MAAV;AAFV,CAbmB,EAiBnB;AACED,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT;AAFV,CAjBmB,EAqBnB;AACED,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,OAAV;AAFV,CArBmB,EAyBnB;AACED,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,OAAV;AAFV,CAzBmB,CAArB;AA+BA,IAAMC,cAAc,GAAG,CACrB;AAAEC,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,SAAS,EAAE;AAA3B,CADqB,EAErB;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,SAAS,EAAE;AAA5B,CAFqB,EAGrB;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,SAAS,EAAE;AAA7B,CAHqB,EAIrB;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,SAAS,EAAE;AAA7B,CAJqB,EAKrB;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,SAAS,EAAE;AAA5B,CALqB,CAAvB;AAQA,eAAeC,IAAI,GAAG,gBAAO;AAAA,kBACMb,QAAQ,CAACU,cAAD,CADd;AAAA;AAAA,MACpBI,OADoB;AAAA,MACXC,aADW;;AAG3B,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AAAA,wBAGpBA,KAHoB,CAEtBC,MAFsB;AAAA,QAEZC,KAFY,iBAEZA,KAFY;AAAA,QAELC,OAFK,iBAELA,OAFK;AAKxBL,IAAAA,aAAa,CAAC,UAAAM,KAAK;AAAA,aACjBA,KAAK,CAACC,GAAN,CAAU,UAAAC,CAAC,EAAI;AACb,YAAIA,CAAC,CAACZ,KAAF,KAAYQ,KAAhB,EAAuB;AACrB,iDACKI,CADL;AAEEX,YAAAA,SAAS,EAAEQ;AAFb;AAID;;AAED,eAAOG,CAAP;AACD,OATD,CADiB;AAAA,KAAN,CAAb;AAYD,GAjBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,OAAO,CAACQ,GAAR,CAAY,UAAAC,CAAC;AAAA,wBACZ,oBAAC,MAAD;AAAQ,MAAA,GAAG,YAAKA,CAAC,CAACZ,KAAP,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,EAAE,EAAEY,CAAC,CAACZ,KADR;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAEY,CAAC,CAACZ,KAHX;AAIE,MAAA,QAAQ,EAAEK,QAJZ;AAKE,MAAA,OAAO,EAAEO,CAAC,CAACX,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AAAO,MAAA,OAAO,EAAEW,CAAC,CAACZ,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BY,CAAC,CAACZ,KAA5B,CARF,CADY;AAAA,GAAb,CADH,CADF,eAgBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,UAAU,EAAEJ,YADd;AAEE,IAAA,QAAQ,EAAE,CAFZ;AAGE,IAAA,SAAS,EAAE,GAHb;AAIE,IAAA,UAAU,EAAE,GAJd;AAKE,IAAA,OAAO,EAAEO,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGP,YAAY,CAACe,GAAb,CAAiB,UAAAE,IAAI;AAAA,wBACpB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAAChB,EAAhB;AAAoB,MAAA,SAAS,iBAAUgB,IAAI,CAACf,MAAL,CAAY,CAAZ,CAAV,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGe,IAAI,CAACf,MAAL,CAAYa,GAAZ,CAAgB,UAAAG,CAAC;AAAA,0BAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,CAAP,CADgB;AAAA,KAAjB,CADH,CADF,EAMGD,IAAI,CAAChB,EANR,CADoB;AAAA,GAArB,CAPH,CADF,CAhBF,CADF;AAuCD,CA7DD","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./cstyles.css\";\r\nimport styled from \"styled-components\";\r\n\r\nimport IsoTopeGrid from \"react-isotope\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100px;\r\n  height: 100px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Filter = styled(\"button\")`\r\n  background-color: transparent;\r\n  border: none;\r\n  outline: none;\r\n\r\n  > input {\r\n    width: 0;\r\n    height: 0;\r\n\r\n    &:checked {\r\n      & + label {\r\n        color: blue;\r\n        border-color: blue;\r\n      }\r\n    }\r\n  }\r\n\r\n  > label {\r\n    padding: 5px;\r\n    border-bottom: 2px solid transparent;\r\n\r\n    &:hover {\r\n      color: blue;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Card = styled(\"div\")`\r\n  &.test {\r\n    background-color: blue !important;\r\n  }\r\n\r\n  &.test1 {\r\n    background-color: red !important;\r\n  }\r\n`;\r\n\r\nconst cardsDefault = [\r\n  {\r\n    id: \"a\",\r\n    filter: [\"test\", \"chart\"]\r\n  },\r\n  {\r\n    id: \"b\",\r\n    filter: [\"test1\", \"tile\"]\r\n  },\r\n  {\r\n    id: \"c\",\r\n    filter: [\"test\", \"chart\"]\r\n  },\r\n  {\r\n    id: \"d\",\r\n    filter: [\"test1\", \"tile\"]\r\n  },\r\n  {\r\n    id: \"e\",\r\n    filter: [\"test\", \"tile\"]\r\n  },\r\n  {\r\n    id: \"f\",\r\n    filter: [\"test1\", \"chart\"]\r\n  },\r\n  {\r\n    id: \"h\",\r\n    filter: [\"test1\", \"chart\"]\r\n  }\r\n];\r\n\r\nconst filtersDefault = [\r\n  { label: \"all\", isChecked: true },\r\n  { label: \"test\", isChecked: false },\r\n  { label: \"test1\", isChecked: false },\r\n  { label: \"chart\", isChecked: false },\r\n  { label: \"tile\", isChecked: false }\r\n];\r\n\r\nexport default cont = () =>  {\r\n  const [filters, updateFilters] = useState(filtersDefault);\r\n\r\n  const onFilter = event => {\r\n    const {\r\n      target: { value, checked }\r\n    } = event;\r\n\r\n    updateFilters(state =>\r\n      state.map(f => {\r\n        if (f.label === value) {\r\n          return {\r\n            ...f,\r\n            isChecked: checked\r\n          };\r\n        }\r\n\r\n        return f;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        {filters.map(f => (\r\n          <Filter key={`${f.label}_key`}>\r\n            <input\r\n              id={f.label}\r\n              type=\"checkbox\"\r\n              value={f.label}\r\n              onChange={onFilter}\r\n              checked={f.isChecked}\r\n            />\r\n            <label htmlFor={f.label}>{f.label}</label>\r\n          </Filter>\r\n        ))}\r\n      </div>\r\n\r\n      <Container>\r\n        <IsoTopeGrid\r\n          gridLayout={cardsDefault}\r\n          noOfCols={3}\r\n          unitWidth={200}\r\n          unitHeight={100}\r\n          filters={filters}\r\n        >\r\n          {cardsDefault.map(card => (\r\n            <Card key={card.id} className={`card ${card.filter[0]}`}>\r\n              <div className=\"tags\">\r\n                {card.filter.map(c => (\r\n                  <span>{c}</span>\r\n                ))}\r\n              </div>\r\n              {card.id}\r\n            </Card>\r\n          ))}\r\n        </IsoTopeGrid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}